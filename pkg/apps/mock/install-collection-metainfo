#! /usr/bin/python

import xml.etree.ElementTree as ET
import sys
import glob
import shutil
import os

def TextElement(tag, text):
    elt = ET.Element(tag)
    elt.text = text
    return elt

def process_dirs(origin, dirs):

    coll = ET.Element('components', { 'origin': origin })

    def process_dir(directory):
        for file in  glob.glob(directory + "/usr/share/metainfo/*.xml"):
            root = ET.parse(file).getroot()
            icon = root.find('icon')
            if icon is not None and icon.attrib['type'] == "local":
                src = icon.text
                dest = directory + ".png"
                destdir = "/usr/share/app-info/icons/%s/%sx%s" % (origin,
                                                                  icon.attrib['width'],
                                                                  icon.attrib['height'])
                if not os.path.exists(destdir):
                    os.makedirs(destdir)
                shutil.copyfile(directory + "/" + src, destdir + "/" + dest)
                icon.text = dest
                icon.attrib['type'] = "cached"
            root.append(TextElement('pkgname', directory))
            coll.append(root)

    for d in dirs:
        process_dir(d)

    xmldir = "/usr/share/app-info/xmls"
    if not os.path.exists(xmldir):
        os.makedirs(xmldir)

    ET.ElementTree(coll).write(xmldir + "/%s.xml" % origin)

process_dirs(sys.argv[1], sys.argv[2:])
